#pragma once

extern "C" __declspec(dllexport) void Init();
extern "C" __declspec(dllexport) void check();
extern "C" __declspec(dllexport) void scalar_multiplication(unsigned char* priv, unsigned char* publicKeyBytesOut);
extern "C" __declspec(dllexport) void point_multiplication(unsigned char* publicKeyBytesIn, unsigned char* priv, unsigned char* publicKeyBytesOut);
extern "C" __declspec(dllexport) void double_point(unsigned char* publicKeyBytesIn, unsigned char* publicKeyBytesOut);
extern "C" __declspec(dllexport) void negate_point(unsigned char* publicKeyBytesIn, unsigned char* publicKeyBytesOut);
extern "C" __declspec(dllexport) void add_points(unsigned char* publicKeyBytesIn1, unsigned char* publicKeyBytesIn2, unsigned char* publicKeyBytesOut);
extern "C" __declspec(dllexport) void add_point_scalar(unsigned char* publicKeyBytesIn, unsigned char* priv, unsigned char* publicKeyBytesOut);
extern "C" __declspec(dllexport) void subtract_points(unsigned char* publicKeyBytesIn1, unsigned char* publicKeyBytesIn2, unsigned char* publicKeyBytesOut);
extern "C" __declspec(dllexport) void subtract_point_scalar(unsigned char* publicKeyBytesIn, unsigned char* priv, unsigned char* publicKeyBytesOut);
extern "C" __declspec(dllexport) void increment_point(unsigned char* publicKeyBytesIn, unsigned char* publicKeyBytesOut);
extern "C" __declspec(dllexport) void decrement_point(unsigned char* publicKeyBytesIn, unsigned char* publicKeyBytesOut);
extern "C" __declspec(dllexport) bool point_on_curve(unsigned char* publicKeyBytesIn);
extern "C" __declspec(dllexport) void get_y(unsigned char* BytesIn, bool isEven, unsigned char* BytesOut);
extern "C" __declspec(dllexport) void privatekey_to_hash160(int type, bool compressed, unsigned char* priv, unsigned char* BytesOut);
extern "C" __declspec(dllexport) void publickey_to_hash160(int type, bool compressed, unsigned char* publicKeyBytesIn, unsigned char* BytesOut);
extern "C" __declspec(dllexport) void privatekey_to_uwif(unsigned char* priv, unsigned char* BytesOut);
extern "C" __declspec(dllexport) void privatekey_to_cwif(unsigned char* priv, unsigned char* BytesOut);
extern "C" __declspec(dllexport) void wif_to_privatekey(char* wif, unsigned char* BytesOut);
extern "C" __declspec(dllexport) void privatekey_to_address(int type, bool compressed, unsigned char* priv, unsigned char* BytesOut);
extern "C" __declspec(dllexport) void publickey_to_address(int type, bool compressed, unsigned char* publicKeyBytesIn, unsigned char* BytesOut);
extern "C" __declspec(dllexport) void hash160_to_address(int type, bool compressed, unsigned char* hash160, unsigned char* BytesOut);
extern "C" __declspec(dllexport) void publickey_to_point(char* publicKey, unsigned char* publicKeyBytesOut);
extern "C" __declspec(dllexport) void p2pkh_address_to_hash160(char* address, unsigned char* BytesOut);
extern "C" __declspec(dllexport) void init_bloom(int arrayIndex, unsigned long long entries, double error);
extern "C" __declspec(dllexport) void bloom_info(int arrayIndex);
extern "C" __declspec(dllexport) void bloom_save(int arrayIndex, char* filename);
extern "C" __declspec(dllexport) void bloom_load(int arrayIndex, char* filename);
extern "C" __declspec(dllexport) void bloom_add(int arrayIndex, char* item, int len);
extern "C" __declspec(dllexport) int bloom_check(int arrayIndex, char* item, int len);